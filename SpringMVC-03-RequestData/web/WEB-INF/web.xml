<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--配置一个字符编码的 Filter
    PS：写在前端控制前才生效
    PS：写在前端控制前才生效
    PS：写在前端控制前才生效-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--可以指定一种编码
        encoding：指定解决 POST 请求乱码-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <!--解决响应乱码-->
        <init-param>
            <!--forceEncoding：顺手解决响应乱码-->
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--SpringMVC 思想是：由一个前端控制器拦截所有请求，并智能派发；
        这个前端控制器是一个 servlet，应该在 web.xml 中配置以拦截所有请求
    -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <init-param>
            <!--contextConfigLocation：指定 SpringMVC 配置文件位置-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-servlet.xml</param-value>
        </init-param>

        <!--servlet 启动加载，servlet 原本是第一次访问创建对象
            load-on-startup：服务器启动的时候创建对象；值越小优先级越高，越先创建对象
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <!--处理所有请求
            /* 和 / 都是处理所有请求，但是 /* 的范围更大，还会拦截到 *.jsp 页面，一旦拦截，jsp 页面就不能显示了；
            / 也会拦截所有请求，但是不会拦截 *.jsp 页面，能保证 *.jsp 页面能够正常访问
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 支持 REST 风格的过滤器：可以将 POST 请求转换为 PUT 或 DELETE 请求 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


</web-app>